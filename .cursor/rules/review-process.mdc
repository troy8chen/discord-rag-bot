---
description: 
globs: 
alwaysApply: true
---
---
description: Decision Review Process and Implementation Checkpoints
globs: "*"
alwaysApply: true
---

# DECISION REVIEW PROCESS

## CRITICAL RULE: Review Before Implementation

**BEFORE implementing any major decisions, architectures, or code changes:**

1. **STOP** - Present the decision/implementation plan to the user
2. **EXPLAIN** - Clearly describe what will be built, why, and how
3. **WAIT** - Get explicit user approval before proceeding
4. **PROCEED** - Only after user confirmation

## Major Decision Categories (Require Review)

### Architecture Decisions
- Database schema changes
- API endpoint design
- Component architecture
- File structure modifications
- Third-party integrations (Pinecone, OpenAI setup)

### Implementation Decisions  
- Package installations
- Environment variable additions
- Configuration changes
- New dependencies
- Build process modifications

### Code Generation
- Creating new files (especially lib/, components/, app/api/)
- Major refactoring
- Algorithm implementations
- Integration patterns

## Review Format

When presenting decisions, use this format:
üîç DECISION REVIEW REQUIRED
What: [Brief description]
Why: [Reasoning]
How: [Implementation approach]
Files: [Files to be created/modified]
Dependencies: [New packages/APIs needed]
Next Steps:
[Step 1]
[Step 2]
[Step 3]
Questions/Concerns: [Any uncertainties]
‚úã WAITING FOR APPROVAL BEFORE PROCEEDING


## Exceptions (No Review Needed)
- Bug fixes in existing code
- Minor styling adjustments
- Documentation updates
- Code formatting/linting
- Console.log additions for debugging

## Remember
- **User review is REQUIRED for all major decisions**
- **Explain the "why" behind each choice**
- **Present alternatives when applicable**
- **Never assume user preferences without asking**

This ensures the project stays aligned with user expectations and requirements.

